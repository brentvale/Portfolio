"use strict";var precacheConfig=[["/portfolio/index.html","8c8326392c188e3e8da9d5b095d65e13"],["/portfolio/static/css/main.5e97ee01.css","dc7164c543795748e88daefcff41e844"],["/portfolio/static/js/main.e72a36ec.js","a60fb2d93917b26f1eb340e3c8d4b9ea"],["/portfolio/static/media/all_logos_crates_web.1e898979.png","1e8989798cfb504f40875c2647fc4208"],["/portfolio/static/media/background_pool_brent_sky_bella_color.5caf564c.jpg","5caf564cd07cbce889641e8efd87c9dd"],["/portfolio/static/media/cans_and_opacity_cans_sprite_300x320.66f0c930.png","66f0c930bfed0bbf047b4ca2e15d1ca4"],["/portfolio/static/media/chicken_eating_sprite_600x600.a8e05c81.png","a8e05c81342c2655f128e8052e160da0"],["/portfolio/static/media/chicken_eating_sprite_facing_right_600x600.606e1522.png","606e1522fa5944811df63c715939b741"],["/portfolio/static/media/chickens_walking_sprite_left_to_right.5ca0ff57.png","5ca0ff57721efee08137fc76d2da5437"],["/portfolio/static/media/chickens_walking_sprite_right_to_left.32516434.png","3251643436d12395ef09b23a94507833"],["/portfolio/static/media/drone_sprite_4x4_800px.cd1ede7c.png","cd1ede7c01ee7b259774be1102cbcfa5"],["/portfolio/static/media/drone_sprite_4x4_800px_white.430b8095.png","430b8095afaed2ff3cf4a68866f2bdcb"],["/portfolio/static/media/lightning_sprite_7images_1strike_purple_glow_single_strand.d73bc218.png","d73bc2189a292b86d0d0fa25a661cad9"],["/portfolio/static/media/node.573818b4.png","573818b4034a60286e8f532039d4d2ed"],["/portfolio/static/media/rubyonrails.d14c7211.png","d14c7211657f390390f3ef3be0e02f4a"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var n=new URL(e);return"/"===n.pathname.slice(-1)&&(n.pathname+=t),n.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,n,r){var a=new URL(e);return r&&a.pathname.match(r)||(a.search+=(a.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(n)),a.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var n=new URL(t).pathname;return e.some(function(e){return n.match(e)})},stripIgnoredUrlParameters=function(e,n){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return n.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],n=e[1],r=new URL(t,self.location),a=createCacheKey(r,hashParamName,n,/\.\w{8}\./);return[r.toString(),a]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(r){return setOfCachedUrls(r).then(function(n){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!n.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return r.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var n=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!n.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,n=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),r="index.html";(e=urlsToCacheKeys.has(n))||(n=addDirectoryIndex(n,r),e=urlsToCacheKeys.has(n));var a="/portfolio/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(n=new URL(a,self.location).toString(),e=urlsToCacheKeys.has(n)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(n)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});